curr_fitness = mean(sim.subpopulations[1].cachedFitness(NULL));
    

if(community.tick == start_write_tick){
    defineGlobal("fitness_scalar", mean(sim.subpopulations[1].cachedFitness(NULL)));
    createDirectory(outDir_pre);

    //sometimes on HPC runs they happen so quickly/in sync the files are written at the same time. this is in attempt to mitigate that
    trackfile_lag = clock(type = "mono") + runif(1, 1,30);
    while(clock(type = "mono") < trackfile_lag){
        //do nothing
    }

    if(isNULL(readFile(paste0(outDir_pre,"trackFile.txt")))){
        writeFile(paste0(outDir_pre,"trackFile.txt"), "0", append = F);
        curr_rep = 0;
    }
    if(!isNULL(readFile(paste0(outDir_pre,"trackFile.txt")))){
        trackFile = readFile(paste0(outDir_pre,"trackFile.txt"));
        curr_rep = asInteger(trackFile[0])+1;
        writeFile(paste0(outDir_pre,"trackFile.txt"), asString(curr_rep), append = F);
    }
    outDir = paste0(outDir_pre,"/",curr_rep,"/");
    createDirectory(outDir);
    //log output

    outfile = paste0(c(outDir,curr_rep,"_log.csv"));			
    log = community.createLogFile(outfile, logInterval=10);
    log.addCycle(); 
    log.addCustomColumn("fitness", "mean(sim.subpopulations[1].cachedFitness(NULL));");
    //log.addCustomColumn("start_het", "calc_het(2);");
    
    // intitialize log for calcs of each subpop
    defineGlobal("mean_fitness_file", paste0(c(outDir,curr_rep,"_meanFitnessScaled.csv")));
    writeFile(mean_fitness_file, paste(seq(from = 1, to = 2000, by = 1), sep=","), append = F);
    defineGlobal("var_fitness_file", paste0(c(outDir,curr_rep,"_varFitness.csv")));
    writeFile(var_fitness_file, paste(seq(from = 1, to = 2000, by = 1), sep=","), append = F);
    defineGlobal("mean_mutations_file", paste0(c(outDir,curr_rep,"_meanMutationsPerInd.csv")));
    writeFile(mean_mutations_file, paste(seq(from = 1, to = 2000, by = 1), sep=","), append = F);
    defineGlobal("mean_ben_mutations_file", paste0(c(outDir,curr_rep,"_meanBenMutationsPerInd.csv")));
    writeFile(mean_ben_mutations_file, paste(seq(from = 1, to = 2000, by = 1), sep=","), append = F);
    defineGlobal("mean_del_mutations_file", paste0(c(outDir,curr_rep,"_meanDelMutationsPerInd.csv")));
    writeFile(mean_del_mutations_file, paste(seq(from = 1, to = 2000, by = 1), sep=","), append = F);
    defineGlobal("mean_ben_per_del_mutations_file", paste0(c(outDir,curr_rep,"_meanBenPerDelMutationsPerInd.csv")));
    defineGlobal("mean_mutations_file_genome", paste0(c(outDir,curr_rep,"_meanMutationsPerGenome.csv")));
    writeFile(mean_mutations_file, paste(seq(from = 1, to = 2000, by = 1), sep=","), append = F);
    defineGlobal("mean_ben_mutations_file_genome", paste0(c(outDir,curr_rep,"_meanBenMutationsPerGenome.csv")));
    writeFile(mean_ben_mutations_file, paste(seq(from = 1, to = 2000, by = 1), sep=","), append = F);
    defineGlobal("mean_del_mutations_file_genome", paste0(c(outDir,curr_rep,"_meanDelMutationsPerGenome.csv")));
    writeFile(mean_del_mutations_file, paste(seq(from = 1, to = 2000, by = 1), sep=","), append = F);
    defineGlobal("mean_ben_per_del_mutations_file_genome", paste0(c(outDir,curr_rep,"_meanBenPerDelMutationsPerGenome.csv")));
    writeFile(mean_ben_per_del_mutations_file, paste(seq(from = 1, to = 2000, by = 1), sep=","), append = F);
    defineGlobal("fixed_mutations_file", paste0(c(outDir,curr_rep,"_fixedMutations.csv")));
    writeFile(fixed_mutations_file, paste(seq(from = 1, to = 2000, by = 1), sep=","), append = F);
    defineGlobal("max_phs_file", paste0(c(outDir,curr_rep,"_maxPhs.csv")));
    writeFile(max_phs_file, paste(seq(from = 1, to = 2000, by = 1), sep=","), append = F);
    defineGlobal("heterozygosity_file", paste0(c(outDir,curr_rep,"_heterozygosity.csv")));
    writeFile(heterozygosity_file, paste(seq(from = 1, to = 2000, by = 1), sep=","), append = F);
    defineGlobal("pop_size_file", paste0(c(outDir,curr_rep,"_popSize.csv")));
    writeFile(pop_size_file, paste(seq(from = 1, to = 2000, by = 1), sep=","), append = F);
    defineGlobal("unscaled_fitness_file", paste0(c(outDir,curr_rep,"_unscaledFitness.csv")));
    writeFile(unscaled_fitness_file, paste(seq(from = 1, to = 2000, by = 1), sep=","), append = F);
    defineGlobal("inbreeding_depression_file", paste0(c(outDir,curr_rep,"_inbreedingDepression.csv")));
    writeFile(inbreeding_depression_file, paste(seq(from = 1, to = 2000, by = 1), sep=","), append = F);
    defineGlobal("num_mutations_file", paste0(c(outDir,curr_rep,"_numMutations.csv")));
    defineGlobal("core_selection_frequencies_file", paste0(c(outDir,curr_rep,"_coreSelectionFrequencies.csv")));
    defineGlobal("core_het_frequencies_file", paste0(c(outDir,curr_rep,"_coreHetFrequencies.csv")));
    defineGlobal("core_site_frequencies_file", paste0(c(outDir,curr_rep,"_coreSiteFrequencies.csv")));
    defineGlobal("offspring_fitness_file", paste0(c(outDir,curr_rep,"_offspringFitness.csv")));


}

//update fitness file
sub_fitnesses_mean = community.tick-start_write_tick;
sub_fitnesses_var = community.tick-start_write_tick;
sub_mutations_mean = community.tick-start_write_tick;
sub_ben_mutations_mean = community.tick-start_write_tick;
sub_del_mutations_mean = community.tick-start_write_tick;
sub_ben_del_mutations_mean = community.tick-start_write_tick;
sub_mutations_mean_genome = community.tick-start_write_tick;
sub_ben_mutations_mean_genome = community.tick-start_write_tick;
sub_del_mutations_mean_genome = community.tick-start_write_tick;
sub_ben_del_mutations_mean_genome = community.tick-start_write_tick;
sub_mutations_fixed = community.tick-start_write_tick;
sub_max_phs = community.tick-start_write_tick;
sub_heterozygosity = community.tick-start_write_tick;
sub_pop_size = community.tick-start_write_tick;
sub_unscaled_fitness = community.tick-start_write_tick;
sub_inbreeding_depression = community.tick-start_write_tick;



for (i in 2:(1+1)){
    temp_mean_fitness = mean(sim.subpopulations[i-1].cachedFitness(NULL));
    temp_var_fitness = variance(sim.subpopulations[i-1].cachedFitness(NULL));
    temp_mean_mutations = get_mutation_per_ind(sim.subpopulations[i-1]);
    temp_mean_ben_mutations = get_ben_mutation_per_ind(sim.subpopulations[i-1]);
    temp_mean_del_mutations = get_del_mutation_per_ind(sim.subpopulations[i-1]);
    temp_mut_per_genome = mut_per_genome(sim.subpopulations[i-1]);
    temp_fixed_mutations = size(which(get_mutation_freqs(sim.subpopulations[i-1])==1.0));
    temp_max_phs = calc_max_PHS(sim.subpopulations[i-1]);
    temp_heterozygosity = calc_het(i);
    temp_pop_size = size(sim.subpopulations[i-1].individuals);
    temp_inbreeding_depression = (mean(fit_offspring) - mean(fit_self)) / mean(fit_offspring);
    
    if(isNULL(temp_mean_fitness)){
        sub_fitnesses_mean = c(sub_fitnesses_mean, 0);
        sub_fitnesses_var = c(sub_fitnesses_var, 0);
        sub_mutations_mean = c(sub_mutations_mean, 0);
        sub_ben_mutations_mean = c(sub_ben_mutations_mean, 0);
        sub_del_mutations_mean = c(sub_del_mutations_mean, 0);
        sub_ben_del_mutations_mean = c(sub_ben_del_mutations_mean, 0);
        sub_mutations_mean_genome = c(sub_mutations_mean_genome, 0);
        sub_ben_mutations_mean_genome = c(sub_ben_mutations_mean_genome, 0);
        sub_del_mutations_mean_genome = c(sub_del_mutations_mean_genome, 0);
        sub_ben_del_mutations_mean_genome = c(sub_ben_del_mutations_mean_genome, 0);
        sub_mutations_fixed = c(sub_mutations_fixed, 0);
        sub_max_phs = c(sub_max_phs, 0);
        sub_heterozygosity = c(sub_heterozygosity, 0);
        sub_pop_size = c (sub_pop_size, 0);
        sub_unscaled_fitness = c(sub_unscaled_fitness, 0);
        sub_inbreeding_depression = c(sub_inbreeding_depression, 0);

    }
    else{
        sub_fitnesses_mean = c(sub_fitnesses_mean, (temp_mean_fitness/fitness_scalar));
        sub_fitnesses_var = c(sub_fitnesses_var, temp_var_fitness);
        sub_mutations_mean = c(sub_mutations_mean, temp_mean_mutations);
        sub_ben_mutations_mean = c(sub_ben_mutations_mean, temp_mean_ben_mutations);
        sub_del_mutations_mean = c(sub_del_mutations_mean, temp_mean_del_mutations);
        sub_ben_del_mutations_mean = c(sub_ben_del_mutations_mean, (temp_mean_ben_mutations/temp_mean_del_mutations));
        sub_mutations_mean_genome = c(sub_mutations_mean_genome, temp_mut_per_genome[0]);
        sub_ben_mutations_mean_genome = c(sub_ben_mutations_mean_genome, temp_mut_per_genome[1]);
        sub_del_mutations_mean_genome = c(sub_del_mutations_mean_genome, temp_mut_per_genome[2]);
        sub_ben_del_mutations_mean_genome = c(sub_ben_del_mutations_mean_genome, (temp_mut_per_genome[1]/temp_mut_per_genome[2]));
        sub_mutations_fixed = c(sub_mutations_fixed, temp_fixed_mutations);
        sub_max_phs = c(sub_max_phs, temp_max_phs);
        sub_heterozygosity = c(sub_heterozygosity, temp_heterozygosity);
        sub_pop_size = c(sub_pop_size, temp_pop_size);
        sub_unscaled_fitness = c(sub_unscaled_fitness, temp_mean_fitness);
        sub_inbreeding_depression = c(sub_inbreeding_depression, temp_inbreeding_depression);

    }
}
extra_pops = rep(0, (10-size(sim.subpopulations)));
mean_fitness_line = c(sub_fitnesses_mean, extra_pops);
var_fitness_line = c(sub_fitnesses_var, extra_pops);
mean_mutations_line = c(sub_mutations_mean, extra_pops);
ben_mean_mutations_line = c(sub_ben_mutations_mean, extra_pops);
del_mean_mutations_line = c(sub_del_mutations_mean, extra_pops);
ben_per_del_mean_mutations_line = c(sub_ben_del_mutations_mean, extra_pops);
mean_mutations_line_genome = c(sub_mutations_mean_genome, extra_pops);
ben_mean_mutations_line_genome = c(sub_ben_mutations_mean_genome, extra_pops);
del_mean_mutations_line_genome = c(sub_del_mutations_mean_genome, extra_pops);
ben_per_del_mean_mutations_line_genome = c(sub_ben_del_mutations_mean_genome, extra_pops);
fixed_mutations_line = c(sub_mutations_fixed, extra_pops);
max_phs_line = c(sub_max_phs, extra_pops);
heterozygosity_line = c(sub_heterozygosity, extra_pops);
pop_size_line = c(sub_pop_size, extra_pops);
unscaled_fitness_line = c(sub_unscaled_fitness, extra_pops);
inbreeding_depression_line = c(sub_inbreeding_depression, extra_pops);




writeFile(mean_fitness_file, paste(mean_fitness_line, sep=","), append = T);
writeFile(var_fitness_file, paste(var_fitness_line, sep=","), append = T);
writeFile(mean_mutations_file, paste(mean_mutations_line, sep=","), append = T);
writeFile(mean_ben_mutations_file, paste(ben_mean_mutations_line, sep=","), append = T);
writeFile(mean_del_mutations_file, paste(del_mean_mutations_line, sep=","), append = T);
writeFile(mean_ben_per_del_mutations_file, paste(ben_per_del_mean_mutations_line, sep=","), append = T);
writeFile(mean_mutations_file_genome, paste(mean_mutations_line_genome, sep=","), append = T);
writeFile(mean_ben_mutations_file_genome, paste(ben_mean_mutations_line_genome, sep=","), append = T);
writeFile(mean_del_mutations_file_genome, paste(del_mean_mutations_line_genome, sep=","), append = T);
writeFile(mean_ben_per_del_mutations_file_genome, paste(ben_per_del_mean_mutations_line_genome, sep=","), append = T);
writeFile(fixed_mutations_file, paste(fixed_mutations_line, sep=","), append = T);
writeFile(max_phs_file, paste(max_phs_line, sep=","), append = T);
writeFile(heterozygosity_file, paste(heterozygosity_line, sep=","), append = T);
writeFile(unscaled_fitness_file, paste(unscaled_fitness_line, sep=","), append = T);
writeFile(pop_size_file, paste(pop_size_line, sep=","), append = T);
writeFile(inbreeding_depression_file, paste(inbreeding_depression_line, sep=","), append = T);


sfs_core = get_sfs_single(2);

n_mutations = size(sim.mutations);
writeFile(num_mutations_file, paste(c((community.tick-start_write_tick),n_mutations), sep=","), append = T);
writeFile(core_site_frequencies_file, paste(c((community.tick-start_write_tick),sfs_core), sep=","), append = T);
writeFile(offspring_fitness_file, paste(c((community.tick-start_write_tick),fit_offspring), sep=","), append = T);


//print to std out
print("tick: " + community.tick + " time: " + time() + " current_fitness: " + curr_fitness);
